<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emed.shopping.dao.mapper.admin.store.ShopStoreMapper" >

    <select id="getAllStoreList" resultType="map" parameterType="map">
    SELECT
      ss.id,
      ss.store_name  AS storeName,
      ss.store_ower  AS storeOwer,
      ss.validity   AS validity,
      ss.store_status AS storeStatus,
      ss.store_recommend AS storeRecommend,
      ss.sc_id AS scId,
      ssc.class_name AS className,
      su.user_name   AS userName,
      sa.area_name   AS areaName,
      ssg.grade_name AS gradeName,
      (SELECT
         area_name
       FROM shop_area
       WHERE id = sa.parent_id) AS parentName,
      ssc.class_name AS className
    FROM shop_store ss
      LEFT JOIN shop_area sa
        ON sa.id = ss.area_id
      LEFT JOIN shop_user su
        ON ss.id = su.store_id
      LEFT JOIN shop_store_class ssc
    ON ss.sc_id = ssc.id
    LEFT JOIN shop_store_grade ssg
    ON ss.grade_id = ssg.id
        <where>
            <if test="keywords != null and keywords != ''">
                and ss.store_name like  CONCAT('%', #{keywords,jdbcType=VARCHAR}, '%')
            </if>
        </where>


    </select>

    <select id="getOneStoreById" resultType="map" parameterType="java.lang.Long">
        SELECT
        ss.id,
        ss.store_address AS storeAddress,
        ss.store_zip   AS storeZip,
        ss.store_telephone AS storeTelephone,
        ss.store_name  AS storeName,
        ss.store_ower  AS storeOwer,
        ss.card_approve AS cardApprove,
        ss.realstore_approve AS realstoreApprove,
        ss.sc_id AS scId,
        DATE_FORMAT(ss.validity, '%Y-%m-%d' ) AS validity,
        ss.store_status AS storeStatus,
        ss.store_recommend AS storeRecommend,
        ssc.class_name AS className,
        su.user_name   AS userName,
        sa.area_name   AS areaName,
        ssg.grade_name AS gradeName,
        (SELECT
        area_name
        FROM shop_area
        WHERE id = sa.parent_id) AS parentName,
        ssc.class_name AS className
        FROM shop_store ss
        LEFT JOIN shop_area sa
        ON sa.id = ss.area_id
        LEFT JOIN shop_user su
        ON ss.id = su.store_id
        LEFT JOIN shop_store_class ssc
        ON ss.sc_id = ssc.id
        LEFT JOIN shop_store_grade ssg
        ON ss.grade_id = ssg.id
        WHERE
        ss.id = #{id}

    </select>


    <insert id="insertAndGetId" useGeneratedKeys="true" keyProperty="id" parameterType="com.emed.shopping.dao.model.admin.store.ShopStore">
        insert into shop_store (id, add_time, delete_status,
        card_approve, realstore_approve, store_address,
        store_credit, store_msn, store_name,
        store_ower, store_ower_card, store_qq,
        store_recommend, store_recommend_time, store_status,
        store_telephone, store_zip, template,
        validity, area_id, card_id,
        grade_id, sc_id, store_banner_id,
        store_license_id, store_logo_id, update_grade_id,
        domain_modify_count, store_second_domain, favorite_count,
        store_lat, store_lng, store_ww,
        map_type, delivery_begin_time, delivery_end_time,
        combin_begin_time, combin_end_time, weixin_begin_time,
        weixin_end_time, weixin_status, weixin_appId,
        weixin_appSecret, weixin_token, weixin_qr_img_id,
        weixin_account, store_weixin_logo_id, weixin_store_name,
        store_info, store_seo_description,
        store_seo_keywords, violation_reseaon,
        weixin_welecome_content)
    values (#{id,jdbcType=BIGINT}, #{addTime,jdbcType=TIMESTAMP}, #{deleteStatus,jdbcType=VARCHAR},
      #{cardApprove,jdbcType=VARCHAR}, #{realstoreApprove,jdbcType=VARCHAR}, #{storeAddress,jdbcType=VARCHAR},
      #{storeCredit,jdbcType=INTEGER}, #{storeMsn,jdbcType=VARCHAR}, #{storeName,jdbcType=VARCHAR},
      #{storeOwer,jdbcType=VARCHAR}, #{storeOwerCard,jdbcType=VARCHAR}, #{storeQq,jdbcType=VARCHAR},
      #{storeRecommend,jdbcType=VARCHAR}, #{storeRecommendTime,jdbcType=TIMESTAMP}, #{storeStatus,jdbcType=INTEGER},
      #{storeTelephone,jdbcType=VARCHAR}, #{storeZip,jdbcType=VARCHAR}, #{template,jdbcType=VARCHAR},
      #{validity,jdbcType=TIMESTAMP}, #{areaId,jdbcType=BIGINT}, #{cardId,jdbcType=BIGINT},
      #{gradeId,jdbcType=BIGINT}, #{scId,jdbcType=BIGINT}, #{storeBannerId,jdbcType=BIGINT},
      #{storeLicenseId,jdbcType=BIGINT}, #{storeLogoId,jdbcType=BIGINT}, #{updateGradeId,jdbcType=BIGINT},
      #{domainModifyCount,jdbcType=INTEGER}, #{storeSecondDomain,jdbcType=VARCHAR}, #{favoriteCount,jdbcType=INTEGER},
      #{storeLat,jdbcType=DECIMAL}, #{storeLng,jdbcType=DECIMAL}, #{storeWw,jdbcType=VARCHAR},
      #{mapType,jdbcType=VARCHAR}, #{deliveryBeginTime,jdbcType=TIMESTAMP}, #{deliveryEndTime,jdbcType=TIMESTAMP},
      #{combinBeginTime,jdbcType=TIMESTAMP}, #{combinEndTime,jdbcType=TIMESTAMP}, #{weixinBeginTime,jdbcType=DATE},
      #{weixinEndTime,jdbcType=DATE}, #{weixinStatus,jdbcType=INTEGER}, #{weixinAppid,jdbcType=VARCHAR},
      #{weixinAppsecret,jdbcType=VARCHAR}, #{weixinToken,jdbcType=VARCHAR}, #{weixinQrImgId,jdbcType=BIGINT},
      #{weixinAccount,jdbcType=VARCHAR}, #{storeWeixinLogoId,jdbcType=BIGINT}, #{weixinStoreName,jdbcType=VARCHAR},
      #{storeInfo,jdbcType=LONGVARCHAR}, #{storeSeoDescription,jdbcType=LONGVARCHAR},
      #{storeSeoKeywords,jdbcType=LONGVARCHAR}, #{violationReseaon,jdbcType=LONGVARCHAR},
      #{weixinWelecomeContent,jdbcType=LONGVARCHAR})

    </insert>



</mapper>
